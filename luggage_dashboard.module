<?php
/**
 * @file
 * Code for the luggage_dashboard feature.
 */

include_once 'luggage_dashboard.features.inc';

function _update_status($node,$url) {
  if(!isset($node->field_site_status[LANGUAGE_NONE][0]['value'])) {
    $node->field_site_status[LANGUAGE_NONE] = array(0 => array('value' => ''));
  }
  $thing = drupal_http_request($url . '/files/status/status.json',array('method','GET'));
  $node->field_site_status[LANGUAGE_NONE][0]['value'] = $thing->data;
  node_save($node);
  return $node;
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function luggage_dashboard_form_site_node_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][] = 'luggage_dashboard_form_site_node_form_submit';
}

function luggage_dashboard_form_site_node_form_submit(&$form, &$form_state) {
  $c1 = (isset($form['field_site_url'][LANGUAGE_NONE][0]['value']['#value'])
    && isset($form_state['values']['field_site_url'][LANGUAGE_NONE][0]['value'])
    && $form['field_site_url'][LANGUAGE_NONE][0]['value']['#value'] != $form_state['values']['field_site_url'][LANGUAGE_NONE][0]['value']);
  $c2 = $form_state['values']['field_site_status'][LANGUAGE_NONE][0]['value'] == '';
  $c3 = !isset($form_state['values']['field_site_status'][LANGUAGE_NONE][0]['value']);
  if((isset($form['field_site_url'][LANGUAGE_NONE][0]['value']['#value'])
    && isset($form_state['values']['field_site_url'][LANGUAGE_NONE][0]['value'])
    && $form['field_site_url'][LANGUAGE_NONE][0]['value']['#value'] != $form_state['values']['field_site_url'][LANGUAGE_NONE][0]['value'])
    || (!isset($form_state['values']['field_site_status'][LANGUAGE_NONE][0]['value'])
    || $form_state['values']['field_site_status'][LANGUAGE_NONE][0]['value'] == '')) {
    // Attempt to get the status from a new url
    $node = _update_status($form['#node'],$form_state['values']['field_site_url'][LANGUAGE_NONE][0]['value']);
    $form_state['values']['field_site_status'][LANGUAGE_NONE][0]['value'] = $node->field_site_status[LANGUAGE_NONE][0]['value'];
  }
}

/**
 * Implements hook_cron()
 */
function luggage_dashboard_cron() {
  $nodes = node_load_multiple(array(),array('type'=>'site'));
  foreach($nodes as $index => $node) {
    if(!isset($node->field_site_url[LANGUAGE_NONE][0]['value'])) continue;
    _update_status($node,$node->field_site_url[LANGUAGE_NONE][0]['value']);
  }
}

/**
 * Implements hook_menu()
 */
function luggage_dashboard_menu() {
  $items = array();

  $items['api/node'] = array(
    'access arguments' => array('access content'),
    'page callback' => 'luggage_dashboard_node_api',
    'page arguments' => array(2),
    'delivery callback' => 'drupal_json_output',
  );

  $items['api/node/site/structure'] = array(
    'access arguments' => array('access content'),
    'page callback' => 'luggage_dashboard_site_structure_api',
    'page arguments' => array(2),
    'delivery callback' => 'drupal_json_output',
  );

  $items['dashboard'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('Site Statuses'),
    'description' => 'My custom and very special page',
    'page callback' => 'luggage_dashboard_page',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * API callback to return nodes in JSON format
 *
 * @param $param
 * @return array
 */
function luggage_dashboard_node_api($param) {

  // If passed param is node id
  if ($param && is_numeric($param)) {
    try {
      $node = node_load($param);
    } catch (Exception $e) {
      return False;
    }
    return $node;
  }
  // If passed param is text value
  elseif ($param && !is_numeric($param)) {
    $node = node_load($param);
//    $nodes = db_query("SELECT nid, uid, title FROM {node} n JOIN {field_data_body} b ON n.nid = b.entity_id WHERE n.title LIKE :pattern ORDER BY n.created DESC LIMIT 5", array(':pattern' => '%' . db_like($param) . '%'))->fetchAll();
    return $node;
  }
  // If there is no passed param
  else {
//    $query = new EntityFieldQuery();
//    $query->entityCondition('entity_type','site')
//      ->entityCondition('bundle','node');
//    $nodes = $query->execute();
    $nodes = node_load_multiple(array(),array('type'=>'site'));
//    $nodes = db_query("SELECT nid, uid, title FROM {node} n JOIN {field_data_body} b ON n.nid = b.entity_id ORDER BY n.created DESC LIMIT 10")->fetchAll();
    return array('nodes' => array_values($nodes));
  }
}

/**
 * API callback to return nodes in JSON format
 *
 * @param $param
 * @return array
 */
function luggage_dashboard_site_structure_api($param) {
  $fields = field_info_instances('node','site');
  foreach($fields as $index => $f) {
    if($f['widget']['type'] == 'options_select') {
      $fields[$index]['settings']['allowed_values'] = field_info_field($f['field_name'])['settings']['allowed_values'];
    }
  }
  return array('structure' => array_values($fields));
}

function _get_js() {
  return array(
    'https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.16/angular.min.js',
    'https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.16/angular-resource.min.js',
    'https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.16/angular-route.min.js',
//            'https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.16/angular.min.js.map', // TODO: Remove on production!
    drupal_get_path('module', 'luggage_dashboard') . '/js/luggage_dashboard.js',
  );
}

function _add_js() {
  $arr = _get_js();
  foreach($arr as $a) {
    drupal_add_js($a);
  }
}

function _get_css() {
  return array(
    drupal_get_path('module', 'luggage_dashboard') . '/css/luggage_dashboard.css',
  );
}

function _add_css() {
  $arr =_get_css();
  foreach($arr as $a) {
    drupal_add_css($a);
  }
}

/**
 *
 */
function luggage_dashboard_page() {
  $content = theme_render_template(drupal_get_path('module','luggage_dashboard') . '/templates/dashboard.tpl.php',array());
  _add_css();
  _add_js();
  return array('#markup'=>$content);
}